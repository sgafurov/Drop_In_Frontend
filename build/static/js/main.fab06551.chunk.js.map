{"version":3,"sources":["images/landing-background2.png","images/logo2.png","images/background-with-buildings-pinned.png","components/Navbar.js","components/ApartmentStreetview.js","components/review/Rating.js","components/review/ReviewForm.js","components/review/Reviews.js","components/ApartmentView.js","components/Map.js","components/AutoSearch.js","components/Landing.js","constants.js","components/login-signup/Login.js","components/login-signup/SignUp.js","components/user/UserReviews.js","components/user/UserDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","_useState","useState","_useState2","Object","slicedToArray","isLoggedIn","setIsLoggedIn","navigate","useNavigate","useEffect","localStorage","getItem","console","log","react_default","a","createElement","className","src","BackgroundImage","alt","react_router_dom","to","Logo","onClick","removeItem","window","location","href","ApartmentStreetview","streetViewPanoramaOptions","position","lat","JSON","parse","lng","pov","heading","pitch","zoom","source","react_google_streetview_default","apiKey","process","Rating","rating","setRating","_useState3","_useState4","hover","setHover","toConsumableArray","Array","map","star","index","type","key","id","setCurrentReview","objectSpread","currentReview","star_rating","onMouseEnter","onMouseLeave","ReviewForm","unique_id","uuid","placeID","address","review_id","building_id","username","comment_body","timestamp","Math","floor","Date","now","handleChange","event","prevData","defineProperty","target","name","value","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","resObject","wrap","_context","prev","next","preventDefault","alert","abrupt","setUserReviews","concat","body","author","fetch","method","mode","headers","Content-Type","stringify","sent","json","status","t0","message","stop","_x","apply","this","arguments","Fragment","onSubmit","placeholder","onChange","Rating_Rating","Reviews","getReviewsFromBackend","_useState5","_useState6","userReviews","_useState7","_useState8","newestReviewBtn","setNewestReviewBtn","sortReviewByNewest","sort","b","_callee2","_context2","delegateYield","_loop","i","length","t1","item","ReviewForm_ReviewForm","WrappedMap","withScriptjs","withGoogleMap","lib","defaultZoom","defaultCenter","ApartmentView","googleMapURL","loadingElement","style","height","containerElement","mapElement","Reviews_Reviews","scriptLoader","isScriptLoaded","isScriptLoadSucceed","setAddress","userInput","setUserInput","coordinates","setCoordinates","updateAddress","updateCoordinates","handleSelect","valuePlaceID","results","latLng","geocodeByPlaceId","getLatLng","geometry","prevCoords","setItem","substr","_x2","dist_default","onSelect","_ref2","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","backgroundColor","cursor","assign","description","Landing","localStorageItem","components_AutoSearch","addressFromAutoSearch","coordsFromAutoSearch","BASE_URL","Login","setRedirect","password","loginData","setLoginData","updateUserData","e","SignUp","email","firstname","lastname","user_type","userData","setUserData","UserReviews","UserDashboard","clickedMyReviews","setClickedMyReviews","usernameLocalStorage","favorites","UserReviews_UserReviews","newData","react_router","exact","path","element","Landing_Landing","newAddress","newCoord","ApartmentView_ApartmentView","Login_Login","UserDashboard_UserDashboard","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fab06551.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing-background2.df9d8549.png\";","module.exports = __webpack_public_path__ + \"static/media/logo2.9f39db93.png\";","module.exports = __webpack_public_path__ + \"static/media/background-with-buildings-pinned.59734d13.png\";","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\nimport BackgroundImage from '../images/landing-background2.png'\n// import BackgroundImage from '../images/apartment-skyline.jpg'\nimport Logo from '../images/logo2.png'\nimport \"../styles/navbar.css\"\n\nexport default function Navbar(props) {\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    let navigate = useNavigate()\n\n    useEffect(() => {\n        if (localStorage.getItem('isLoggedIn') === 'true') {\n            console.log('itemFromLocalStorage is true')\n            setIsLoggedIn(true)\n        }\n    }, [isLoggedIn])\n\n    const logoutUser = () => {\n        localStorage.removeItem('isLoggedIn')\n        window.location.href = \"/\"\n    }\n\n    const gotToHome = () => {\n        navigate('/')\n    }\n\n    return (\n        <div className='navbar'>\n            <div><img className='nav-img' src={BackgroundImage} alt='NYC Apartments' /></div>\n            <div className='nav-buttons'>\n                <div className='nav-home-btn'> <Link to='/'>HOME </Link></div>\n                <div><img className='nav-logo' src={Logo} alt='Building and map pin(https://www.flaticon.com/free-icon/houses_353354#)' onClick={gotToHome}/></div>\n                {isLoggedIn ? <div className='nav-buttons-logged-in'>\n                    <div className='nav-profile-btn'> <Link to='/user-dashboard'>PROFILE</Link></div>\n                    <div className='nav-logout-btn'> <Link to='/' onClick={logoutUser}>LOGOUT</Link></div>\n                </div> : <div className='nav-login-btn'><Link to='/login'>LOGIN </Link></div>\n                }\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport Streetview from \"react-google-streetview\";\n\nexport default function ApartmentStreetview() {\n  const apiKey = process.env.REACT_APP_GOOGLE_API_KEY;\n\n  const streetViewPanoramaOptions = {\n    position: {\n      lat: JSON.parse(localStorage.getItem(\"lat\")),\n      lng: JSON.parse(localStorage.getItem(\"lng\")),\n    },\n    pov: { heading: -100, pitch: 0 },\n    zoom: 1,\n    source: \"outdoor\",\n  };\n  return (\n    <Streetview\n      apiKey={apiKey}\n      streetViewPanoramaOptions={streetViewPanoramaOptions}\n    />\n  );\n}\n","import React, { useEffect, useState } from 'react'\nimport '../../styles/Rating.css'\n\nexport default function Rating(props) {\n    const [rating, setRating] = useState(0)\n    const [hover, setHover] = useState(0)\n  \n    return (\n        <div className=\"star-rating\">\n            {[...Array(5)].map((star, index) => {\n                index += 1;\n                return (\n                    <button\n                        type=\"button\"\n                        key={index}\n                        className={index <= (hover || rating) ? \"on\" : \"off\"}\n                        id=\"star-rating-btn\"\n                        onClick={() => {\n                            setRating(index);\n                            props.setCurrentReview({...props.currentReview,\n                                star_rating: index\n                            });\n                            console.log('index is: ', index)\n                            console.log('rating is: ', rating)\n                            console.log('hover is: ', hover)\n                        }}\n                        onMouseEnter={() => setHover(index)}\n                        onMouseLeave={() => setHover(rating)}\n                    >\n                        <span className=\"star\">&#9733;</span>\n                    </button>\n                )\n            })}\n        </div>\n    )\n}\n","//CHILD ELEMENT. MAKES POST REQUES TO BACKEND WITH NEW REVIEW DATA\n\nimport React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid'\nimport Rating from './Rating';\nimport '../../styles/ReviewForm.css'\n\nexport default function ReviewForm(props) {\n    const unique_id = uuid()\n    const placeID = localStorage.getItem('placeID')\n    const address = localStorage.getItem('address')\n\n    const [currentReview, setCurrentReview] = useState(\n        {\n            review_id: unique_id,\n            building_id: placeID,\n            address: address,\n            username: \"\",\n            comment_body: \"\",\n            star_rating: 0,\n            timestamp: (Math.floor(Date.now() / 1000))\n        }\n    )\n\n    const handleChange = (event) => {\n        setCurrentReview(prevData => {\n            return {\n                ...prevData,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n    const handleSubmit = async (event) => {\n        console.log('current review', currentReview)\n        event.preventDefault()\n\n        // setCurrentReview(prev => ({\n        //     ...prev,\n        //     //username, comment_body are being set in the form via on change function\n        //     //star_rating is being set through the Rating.js component\n        //     review_id: unique_id,\n        //     building_id: placeID,\n        //     timestamp: (Math.floor(Date.now() / 1000))\n        // }))\n\n        if (currentReview.star_rating == 0) {\n            alert(\"Provide a star rating\")\n            return\n        }\n\n        //send this review up to its parent component (Reviews.js) so that all of the reviews can be rendered and mapped on the page\n        props.setUserReviews(prev => [...prev, {\n            body: currentReview.comment_body,\n            author: currentReview.username,\n            timestamp: currentReview.timestamp\n        }])\n\n        //reset form to look empty\n        setCurrentReview(prev => ({\n            ...prev,\n            username: \"\",\n            comment_body: \"\",\n            star_rating: 0\n        }))\n\n        try {\n            const res = await fetch(`https://dropin-backend.herokuapp.com/review`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(currentReview)\n            })\n\n            const resObject = await res.json()\n            console.log('line 77 of review form', resObject)\n\n            if (resObject.status == 400) {\n                throw resObject\n            }\n            alert('Review added')\n\n        } catch (err) {\n            console.log('error : line 85 of review form', err)\n            if (err.status == 400) {\n                alert(err.message)\n            }\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit} className='review-form'>\n                <input\n                    className='review-textbox'\n                    name='comment_body'\n                    placeholder='Leave a review'\n                    value={currentReview.comment_body}\n                    onChange={handleChange}\n                />\n                <input\n                    className='author-textbox'\n                    name='username'\n                    placeholder='Add your name'\n                    value={currentReview.username}\n                    onChange={handleChange}\n                />\n                <Rating currentReview={currentReview} setCurrentReview={setCurrentReview} />\n\n                <h1>{currentReview.star_rating}</h1>\n                <button type='submit' className='review-submit-btn'>SUBMIT</button>\n            </form>\n        </>\n    )\n}","//PARENT ELEMENT. RENDERS ARRAY OF REVIEWS FROM THE BACKEND\n\nimport React, { useState, useEffect } from 'react';\nimport ReviewForm from './ReviewForm'\nimport '../../styles/Reviews.css'\n\nexport default function Reviews() {\n    const [placeID, setPlaceID] = useState(localStorage.getItem('placeID'))\n    const [address, setAddress] = useState(localStorage.getItem('address'))\n\n    useEffect(() => {\n        getReviewsFromBackend()\n    }, [placeID])\n\n    //array of objects to store all of our reviews\n    const [userReviews, setUserReviews] = useState([\n        {\n            body: \"\",\n            author: \"\",\n            timestamp: \"\"\n        }\n    ])\n\n    const [newestReviewBtn, setNewestReviewBtn] = useState(false)\n\n    const sortReviewByNewest = [].concat(userReviews)\n        .sort((a, b) => a.timestamp < b.timestamp ? 1 : -1)\n\n    const handleSortByNewest = (event) => {\n        event.preventDefault()\n        setNewestReviewBtn(true)\n    }\n\n    const getReviewsFromBackend = async () => {\n        try {\n            const res = await fetch(`https://dropin-backend.herokuapp.com/building-reviews`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    building_id: placeID\n                })\n            })\n            const resObject = await res.json()\n\n            console.log('line 49 of rendering reviews', resObject)\n\n            if (resObject.status == 400) {\n                throw resObject\n            }\n\n            //set the reviews to be the response of array of addresses received from the backend\n            for (let i = 0; i < resObject.length; i++) {\n                setUserReviews(prev => [...prev, {\n                    body: resObject[i].comment_body,\n                    author: resObject[i].username,\n                    timestamp: resObject[i].timestamp\n                }])\n            }\n\n        } catch (err) {\n            console.log('error : line 61 of rendering reviews', err)\n            if (err.status == 400) {\n                alert(err.message)\n            }\n        }\n    }\n\n    return (\n        <>\n            <div>\n                <button onClick={handleSortByNewest}>SORT BY NEWEST</button>\n            </div>\n\n            {/* SHOW REVIEWS OF ADDRESS */}\n            <h1 className='reviews-title'>What residents have to say ...</h1>\n\n            <div className='reviews'>\n                {/* Hard Coded Filler Data */}\n                <div className='review-card'>\n                    <div className='review-content'>There are issues with the hot water.</div>\n                    <div className='review-author'>James A.</div>\n                </div>\n                <div className='review-card'>\n                    <div className='review-content'>Management takes a while to respond.</div>\n                    <div className='review-author'>Crystal T.</div>\n                </div>\n\n                {newestReviewBtn ?\n                    sortReviewByNewest.map((item) => {\n                        return (\n                            <>\n                                {item.body ? (\n                                    <div className='review-card'>\n                                        <div className='review-content'>{item.body}</div>\n                                        <div className='review-author'>{item.author}</div>\n                                    </div>\n                                ) : (\n                                    <p></p>\n                                )}\n                            </>\n                        );\n                    })\n                    //If user sorts by new, then render the reviews by newest AKA sort by shortest timestamp. Else, show the reviews normally as they are added.\n                    : userReviews.map((item) => {\n                        return (\n                            <>\n                                {item.body ? (\n                                    <div className='review-card'>\n                                        <div className='review-content'>{item.body}</div>\n                                        <div className='review-author'>{item.author}</div>\n                                    </div>\n                                ) : (\n                                    <p></p>\n                                )}\n                            </>\n                        );\n                    })}\n\n                <ReviewForm setUserReviews={setUserReviews} />\n            </div>\n        </>\n    )\n}","import React from \"react\";\nimport { withScriptjs, withGoogleMap } from \"react-google-maps\";\nimport Navbar from \"./Navbar\";\nimport Map from \"./Map\";\nimport ApartmentStreetview from \"./ApartmentStreetview\";\nimport Reviews from \"./review/Reviews\";\nimport \"../styles/ApartmentView.css\";\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nexport default function ApartmentView(props) {\n  const apiKey = process.env.REACT_APP_GOOGLE_API_KEY;\n\n  return (\n    <>\n      {/* RENDER NAVBAR */}\n      <Navbar />\n\n      <div className=\"apt-view-div\">\n        <div className=\"apt-address\">\n          <h1>{localStorage.getItem(\"address\")}</h1>\n          {/* <h1>address: {props.address}</h1> */}\n        </div>\n\n        {/* RENDER STREETVIEW OF ADDRESS */}\n        <div className=\"apt-visuals\">\n          <div className=\"apt-pic\">\n            <div className=\"streetview\">\n              <ApartmentStreetview />\n            </div>\n          </div>\n\n          {/* RENDER MAP OF ADDRESS */}\n          <div className=\"apt-map\">\n            <WrappedMap\n              googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&\n                            libraries=geometry.drawing.places&key=${apiKey}`}\n              loadingElement={<div style={{ height: \"100%\" }} />}\n              containerElement={<div style={{ height: \"100%\" }} />}\n              mapElement={<div style={{ height: \"100%\" }} />}\n            />\n          </div>\n        </div>\n\n        {/* SHOW RATING OF ADDRESS */}\n        <div className=\"star-rating\">\n          {/* Rating: (insert star pic here) */}\n        </div>\n\n        {/* SHOW REVIEWS OF ADDRESS */}\n        <Reviews />\n      </div>\n    </>\n  );\n}\n","import React from 'react'\nimport {GoogleMap, Marker} from 'react-google-maps'\n\nexport default function Map(){\n    return(\n        <GoogleMap\n            defaultZoom={17}\n            defaultCenter={{    lat: JSON.parse(localStorage.getItem('lat')), \n                                lng: JSON.parse(localStorage.getItem('lng'))\n                        }}\n        >\n            <Marker position={{     lat: JSON.parse(localStorage.getItem('lat')), \n                                    lng: JSON.parse(localStorage.getItem('lng'))\n                            }}/>\n        </GoogleMap>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PlacesAutocomplete, {\n  geocodeByPlaceId,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport scriptLoader from \"react-async-script-loader\";\n\nfunction AutoSearch(props, isScriptLoaded, isScriptLoadSucceed) {\n  console.log(\"AutoSearch Props: \", props);\n\n  let navigate = useNavigate();\n\n  const [address, setAddress] = useState(\"\");\n\n  const [userInput, setUserInput] = useState(\"\");\n\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lng: null,\n  });\n\n  useEffect(() => {\n    props.updateAddress(address);\n    props.updateCoordinates(coordinates);\n  }, [address]);\n\n  const handleChange = (value) => {\n    setUserInput(value);\n  };\n\n  const handleSelect = async (value, valuePlaceID) => {\n    console.log(\"valuePlaceID \", valuePlaceID);\n    console.log(\"in handleSelect \", address);\n    console.log(\"in handleSelect \", coordinates);\n\n    const results = await geocodeByPlaceId(valuePlaceID);\n    console.log(results);\n\n    const latLng = await getLatLng(results[0]);\n    console.log(\"latLng\", latLng);\n    console.log(\"lat\", results[0].geometry.location.lat());\n\n    setCoordinates((prevCoords) => ({\n      ...prevCoords,\n      lat: latLng.lat,\n      lng: latLng.lng,\n    }));\n\n    setUserInput(value);\n    setAddress(...address, (address) => value);\n\n    props.updateAddress(address);\n    props.updateCoordinates(coordinates);\n\n    const placeID = valuePlaceID;\n    localStorage.setItem(\"address\", value);\n    localStorage.setItem(\"lat\", JSON.stringify(latLng.lat).substr(0, 12));\n    localStorage.setItem(\"lng\", JSON.stringify(latLng.lng).substr(0, 12));\n    localStorage.setItem(\"placeID\", placeID);\n    navigate(\"/apartment-view\");\n  };\n\n  if (props.isScriptLoaded && props.isScriptLoadSucceed) {\n    return (\n      <div>\n        <PlacesAutocomplete\n          value={userInput}\n          valuePlaceID\n          onChange={handleChange}\n          onSelect={handleSelect}\n        >\n          {({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading,\n          }) => (\n            <div>\n              <input\n                {...getInputProps({\n                  placeholder: \"Enter Address ...\",\n                  className: \"location-search-input\",\n                })}\n              />\n\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n\n                {suggestions.map((suggestion) => {\n                  const style = suggestion.active\n                    ? { backgroundColor: \"#4287f5\", cursor: \"pointer\" }\n                    : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n\n                  return (\n                    <div\n                      key={suggestion.description}\n                      {...getSuggestionItemProps(suggestion, { style })}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n      </div>\n    );\n  } else {\n    return <div>NOT loaded</div>;\n  }\n}\n\nconst apiKey = process.env.REACT_APP_GOOGLE_API_KEY;\nexport default scriptLoader([\n  `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`,\n])(AutoSearch);\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n// import BackgroundImage from '../images/map-of-nyc2.png'\nimport BackgroundImage from '../images/background-with-buildings-pinned.png'\nimport AutoSearch from './AutoSearch'\nimport Navbar from './Navbar.js'\n\nimport '../styles/Landing.css'\n\nexport default function Landing(props) {\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    const localStorageItem = localStorage.getItem('isLoggedIn')\n\n    useEffect(() => {\n        if (localStorageItem == 'yes') {\n            setIsLoggedIn(true)\n        }\n    },[])\n\n    console.log('Landing Props: ', props);\n\n    function updateAddress(addressFromAutoSearch) {\n        props.updateAddress(addressFromAutoSearch) //sending it up to App.js\n    }\n\n    function updateCoordinates(coordsFromAutoSearch) {\n        props.updateCoordinates(coordsFromAutoSearch) //sending it up to App.js\n    }\n\n    return (\n\n        <div className='landing-page'>\n\n             <Navbar />\n\n            <div>\n                <img className='landing-background' src={BackgroundImage} alt='' />\n            </div>\n\n            <div className='landing-search'>\n                <h1 className='landing-title'>DROP-IN</h1>\n\n                <AutoSearch updateAddress={updateAddress} updateCoordinates={updateCoordinates} />\n\n            </div>\n\n        </div >\n\n    )\n}","export const BASE_URL = \"https://drop-in-backend.onrender.com\"","import React from \"react\"\nimport { useState } from \"react\"\nimport { Link } from 'react-router-dom'\nimport { useNavigate } from \"react-router-dom\"\nimport Navbar from \"../Navbar\"\nimport \"../../styles/Login.css\"\nimport { BASE_URL } from \"../../constants\"\n\nexport default function Login(props) {\n\tlet navigate = useNavigate()\n\n\tconst [redirect, setRedirect] = useState(false)\n\tconst [loginData, setLoginData] = useState({\n\t\tusername: \"\",\n\t\tpassword: \"\"\n\t})\n\n\tconst google_logo = \"https://p1.hiclipart.com/preview/209/923/667/google-logo-background-g-suite-google-pay-google-doodle-text-circle-line-area-png-clipart.jpg\"\n\n\tfunction updateUserData(loginData) {\n\t\tprops.updateUserData(loginData) //sending it up to App.js\n\t}\n\n\tconst handleChange = (event) => {\n\t\tsetLoginData(prevData => {\n\t\t\treturn {\n\t\t\t\t...prevData,\n\t\t\t\t[event.target.name]: event.target.value\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault()\n\t\tsetRedirect(true)\n\n\t\ttry {\n\t\t\tconst res = await fetch(`${BASE_URL}/users/login`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tmode: 'cors',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(loginData) //login data is currently a JS object. so you have to send it as JSON object\n\t\t\t})\n\t\t\tconst resObject = await res.json()\n\t\t\tconsole.log('line 47 of login', resObject)\n\t\t\tif (resObject.status == 400) {\n\t\t\t\tthrow resObject\n\t\t\t}\n\t\t\t// navigate('/user-dashboard', { state: { username: loginData.username } })\n\t\t\tnavigate('/user-dashboard')\n\t\t\tlocalStorage.setItem('isLoggedIn', true)\n\t\t\tlocalStorage.setItem('username', loginData.username)\n\t\t\tupdateUserData(resObject)\n\t\t} catch (err) {\n\t\t\tconsole.log('line 57 of register error', err)\n\t\t\tif (err.status == 400) {\n\t\t\t\talert(err.message)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar />\n\t\t\t<div className=\"login-box\">\n\n\t\t\t\t<form onSubmit={handleSubmit} className=\"login-form\">\n\n\t\t\t\t\t<h1 className='login-title'>DROP-IN</h1>\n\n\t\t\t\t\t<h1 className=\"login-msg\">Login to your account</h1>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input className=\"login-input\"\n\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\tvalue={loginData.username}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input className=\"login-input\"\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tvalue={loginData.password}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type=\"submit\" value=\"Login\" className=\"login-btns login-submit-btn\" />\n\n\t\t\t\t\t{/* <p className=\"login-OR\"> or</p>\n\t\t\t\t\t<button className=\"login-btns login-google-btn\">\n\t\t\t\t\t\t<img src={google_logo} className=\"google-logo\" />\n\t\t\t\t\t\t<p className=\"google-text\">Continue with Google</p>\n\t\t\t\t\t</button> */}\n\n\t\t\t\t\t<p className=\"sign-up-msg\">\n\t\t\t\t\t\tDont have an account? <Link to=\"/signup\"> Sign Up </Link>\n\t\t\t\t\t</p>\n\t\t\t\t\t<hr className=\"login-footer-line\" />\n\t\t\t\t\t<p className=\"login-footer-msg\">\n\t\t\t\t\t\tBy continuing in you agree to Drop-In's Terms of Service, Privacy Policy\n\t\t\t\t\t</p>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"../Navbar\";\nimport \"../../styles/Login.css\";\nimport { BASE_URL } from \"../../constants\"\n\nexport default function SignUp(props) {\n  let navigate = useNavigate();\n  const [userData, setUserData] = useState({\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    address: \"\",\n    user_type: \"\",\n    // favorites: \"\"\n  });\n  const [redirect, setRedirect] = useState(false);\n\n  const google_logo =\n    \"https://p1.hiclipart.com/preview/209/923/667/google-logo-background-g-suite-google-pay-google-doodle-text-circle-line-area-png-clipart.jpg\";\n\n  console.log(userData);\n\n  // function updateUserData(loginData) {\n  // \tprops.updateUserData(loginData) //sending it up to App.js\n  // }\n\n  const handleChange = (event) => {\n    setUserData((prevData) => {\n      return {\n        ...prevData,\n        [event.target.name]: event.target.value,\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await fetch(`${BASE_URL}/users/register`, {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(userData),\n        });\n        if (res.status == 400) {\n          throw res.message;\n        }\n        const resObject = await res.json();\n        console.log(\"res.json() = \", resObject);\n        alert(\"Account created\");\n        navigate(\"/login\");\n\n      // var data = JSON.stringify(userData);\n\n      // var config = {\n      //   method: \"post\",\n      //   url:\n      //     \"https://us-east-1.aws.data.mongodb-api.com/app/data-wiwke/endpoint/data/v1/action/insertOne\",\n      //   withCredentials: false,\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //     \"api-key\":\n      //       \"RMe3BFadvAm91puSpQREVs10YAAeNyMONplZNisIqRcZi6pB51rmpm8ehFPnK2Fl\",\n      //   },\n      //   data: data,\n      // };\n\n      // axios(config)\n      //   .then(function(response) {\n      //     console.log(JSON.stringify(response.data));\n      //   })\n      //   .catch(function(error) {\n      //     console.log(error);\n      //   });\n    } catch (err) {\n      console.log(\"SignUp register error = \", err);\n      if (err.status == 400) {\n        alert(err.message);\n      }\n    }\n    setRedirect(true);\n    // updateUserData(loginData)\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"login-box\">\n        {/* <img src={logo} className=\"logo\"/> */}\n\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <h1 className=\"login-title\">DROP-IN</h1>\n\n          <h1 className=\"login-msg\">Create an account</h1>\n          <label>\n            <input\n              className=\"login-input\"\n              placeholder=\"Email\"\n              type=\"text\"\n              name=\"email\"\n              value={userData.email}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <input\n              className=\"login-input\"\n              placeholder=\"Username\"\n              type=\"text\"\n              name=\"username\"\n              value={userData.username}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <input\n              className=\"login-input\"\n              placeholder=\"Password\"\n              type=\"text\"\n              name=\"password\"\n              value={userData.password}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <input\n              className=\"login-input\"\n              placeholder=\"First Name\"\n              type=\"text\"\n              name=\"firstname\"\n              value={userData.firstname}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <input\n              className=\"login-input\"\n              placeholder=\"Last Name\"\n              type=\"text\"\n              name=\"lastname\"\n              value={userData.lastname}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <input\n              className=\"login-input\"\n              placeholder=\"Address\"\n              type=\"text\"\n              name=\"address\"\n              value={userData.address}\n              onChange={handleChange}\n            />\n          </label>\n\n          <h3>I am a</h3>\n          <div className=\"login-input-radios\">\n            <label className=\"login-input-radio-tenant\">\n              Tenant\n              <input\n                type=\"radio\"\n                name=\"user_type\"\n                value=\"tenant\"\n                onChange={handleChange}\n              />\n            </label>\n            <label className=\"login-input-radio-landlord\">\n              Landlord\n              <input\n                type=\"radio\"\n                name=\"user_type\"\n                value=\"landlord\"\n                onChange={handleChange}\n              />\n            </label>\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Sign Up\"\n            className=\"login-btns login-submit-btn\"\n          />\n\n          {/* <p className=\"login-OR\"> or</p>\n\t\t\t\t\t<button className=\"login-btns login-google-btn\">\n\t\t\t\t\t\t<img src={google_logo} className=\"google-logo\" />\n\t\t\t\t\t\t<p className=\"google-text\">Continue with Google</p>\n\t\t\t\t\t</button> */}\n\n          <p className=\"sign-up-msg\">\n            Already have an account? <Link to=\"/login\">Login</Link>\n          </p>\n          <hr className=\"login-footer-line\" />\n          <p className=\"login-footer-msg\">\n            By continuing in you agree to Drop-In's Terms of Service and Privacy\n            Policy\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport '../../styles/UserReviews.css'\n\nexport default function UserReviews() {\n    const [username, setUsername] = useState(localStorage.getItem('username'))\n\n    useEffect(() => {\n        getReviewsFromBackend()\n    }, [username])\n\n    //array of objects to store all of our reviews\n    const [userReviews, setUserReviews] = useState([\n        {\n            body: \"\",\n            author: \"\",\n            timestamp: \"\",\n            address: \"\"\n        }\n    ])\n\n    const [newestReviewBtn, setNewestReviewBtn] = useState(false)\n\n    const sortReviewByNewest = [].concat(userReviews)\n        .sort((a, b) => a.timestamp < b.timestamp ? 1 : -1)\n\n    const handleSortByNewest = (event) => {\n        event.preventDefault()\n        setNewestReviewBtn(true)\n    }\n\n    const getReviewsFromBackend = async () => {\n        try {\n            const res = await fetch(`https://dropin-backend.herokuapp.com/my-reviews`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: username\n                })\n            })\n\n            const resObject = await res.json()\n\n            console.log('line 44 of rendering user reviews', resObject)\n\n            if (resObject.status == 400) {\n                throw resObject\n            }\n\n            //set the reviews to be the response of array of addresses received from the backend\n            for (let i = 0; i < resObject.length; i++) {\n                setUserReviews(prev => [...prev, {\n                    body: resObject[i].comment_body,\n                    author: resObject[i].username,\n                    timestamp: resObject[i].timestamp,\n                    address: resObject[i].address,\n                }])\n            }\n\n        } catch (err) {\n            console.log('error : line 60 of rendering user reviews', err)\n            if (err.status == 400) {\n                alert(err.message)\n            }\n        }\n    }\n\n    return (\n        <>\n            <div>\n                <button onClick={handleSortByNewest}>SORT BY NEWEST</button>\n            </div>\n\n            <div className='user-reviews'>\n                {newestReviewBtn ?\n                    sortReviewByNewest.map((item) => {\n                        return (\n                            <>\n                                {item.body ? (\n                                    <div className='user-review-card'>\n                                        <div className='user-review-content'>{item.body}</div>\n                                        <div className='user-review-author'>{item.author}</div>\n                                        <div className='user-review-content'>({item.address})</div>\n                                    </div>\n                                ) : (\n                                    <p></p>\n                                )}\n                            </>\n                        );\n                    })\n                    //If user sorts by new, then render the reviews by newest AKA sort by shortest timestamp. Else, show the reviews normally as they are added.\n                    : userReviews.map((item) => {\n                        return (\n                            <>\n                                {item.body ? (\n                                    <div className='user-review-card'>\n                                        <div className='user-review-content'>{item.body}</div>\n                                        <div className='user-review-author'>{item.author}</div>\n                                        <div className='user-review-content'>({item.address})</div>\n                                    </div>\n                                ) : (\n                                    <p></p>\n                                )}\n                            </>\n                        );\n                    })}\n            </div>\n        </>\n    )\n}","import React, { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport Navbar from \"../Navbar\"\nimport UserReviews from \"./UserReviews\"\nimport '../../styles/UserDashboard.css'\n\nexport default function UserDashboard(props) {\n\n    const [clickedMyReviews, setClickedMyReviews] = useState(false)\n    const usernameLocalStorage = localStorage.getItem('username')\n    const [loginData, setLoginData] = useState({\n        firstname: \"\",\n        lastname: \"\",\n        username: \"\",\n        password: \"\",\n        user_type: \"\",\n        favorites: \"\"\n    });\n\n    useEffect(() => {\n        console.log(loginData)\n        setLoginData(loginData => props.loginData)\n    }, [props])\n\n    // let username = location.state.username\n    // let usernameArray = username.split('')\n    // username = usernameArray[0].toUpperCase() + username.substring(1).toLowerCase()\n\n    return (\n        <div className=\"user-dashboard\">\n            <Navbar />\n            {/* <h1>Hi, {props.loginData.username}</h1> */}\n            <h1>Hi, {usernameLocalStorage}</h1>\n            <div className=\"content-div\">\n                <button onClick={() => setClickedMyReviews(true)}>My Reviews</button>\n            </div>\n\n            {\n                clickedMyReviews ? <UserReviews/> : <></>\n            }\n            \n            <div>\n                <h3>My account details</h3>\n                <p>{loginData.firstname}</p>\n                <p>{loginData.lastname}</p>\n                <p>{loginData.username}</p>\n            </div>\n        </div>\n    )\n}","import './styles/App.css';\nimport ApartmentView from './components/ApartmentView'\nimport React, { useState } from \"react\"\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Landing from './components/Landing';\nimport Login from \"./components/login-signup/Login\"\nimport SignUp from \"./components/login-signup/SignUp\"\nimport UserDashboard from \"./components/user/UserDashboard\"\nimport scriptLoader from 'react-async-script-loader'\n\nfunction App() {\n  const [address, setAddress] = useState('')\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lng: null,\n  })\n  const [loginData, setLoginData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    username: \"\",\n    password: \"\",\n    user_type: \"\",\n    favorites: \"\"\n  })\n\n  function updateAddress(newAddress) {\n    const apiKey = process.env.REACT_APP_GOOGLE_API_KEY;\n\n    //console.log('getting child address data in app.js:', newAddress)\n    setAddress(...address, address => newAddress)\n  }\n\n  function updateCoordinates(newCoord) {\n    //console.log('getting child coordinates data in app.js:', newCoord)\n    setCoordinates(coordinates => newCoord)\n  }\n\n  function updateUserData(newData) {\n    console.log('getting child coordinates data in app.js:', newData)\n    setLoginData(prevData => newData)\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes className='routes'>\n          <Route exact path=\"/\" element={<Landing updateAddress={updateAddress} updateCoordinates={updateCoordinates} />} />\n          <Route exact path=\"/apartment-view\" element={<ApartmentView address={address} coordinates={coordinates} />} />\n          <Route exact path=\"/login\" element={<Login updateUserData={updateUserData}/>} />\n          <Route exact path=\"/signup\" element={<SignUp updateUserData={updateUserData} />} />\n          <Route exact path=\"/user-dashboard\" element={<UserDashboard loginData={loginData} />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\nconst apiKey = process.env.REACT_APP_GOOGLE_API_KEY;\n// ${process.env.GOOGLE_MAPS_API_KEY}\n export default scriptLoader([`https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`])(App);\n //export default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}